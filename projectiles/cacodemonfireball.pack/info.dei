title: DHMP cacodemon projectile
version: 20221229-0302
license: Attribution-NonCommercial-ShareAlike 4.0 International https://creativecommons.org/licenses/by-nc-sa/4.0/
tags: plasma projectile hidden

#requires <com.hiriwa.dhmp.dhmp.common>
#exported at 0.11
#include ded's
defsPath = "defs"

########################
#Set up the model
########################
#asset model.thing.misc12 {
asset model.thing.headshot {
  path = "cacoball.fbx"
  front <0, 0, 1>
  up <0, 1, 0>
offset <0, 0, 0>
#offset <0, 18, 0>
 alignment.yaw = view
 alignment.pitch = view


  #++++++++++++++++++++++++
  #set up the textures for the model
  #++++++++++++++++++++++++
  material {
    variant "material-light-cross" {
      mesh-light-cross {
        diffuseMap = "textures/light-ball.png"
        normalMap = "textures/noise3d_flamed.png"
        specularMap = "textures/light-ball.png"
      	emissiveMap = "textures/light-ball.png"
      }
    }
    variant "material-light-blue" {
      mesh-light-blue {
        diffuseMap = "textures/light-purple.png"
        normalMap = "textures/noise3d_flamed.png"
        specularMap = "textures/light-purple.png"
      	emissiveMap = "textures/light-purple.png"
      }
    }
    variant "material-death" {
      mesh-death {
        diffuseMap = "textures/light-ball.png"
        normalMap = "textures/noise3d_flamed.png"
        heightMap = "textures/light-ball.png"
      	specularMap = "textures/light-ball.png"
      	emissiveMap = "textures/exploded.png"
      }
     }
  }

  #++++++++++++++++++++++++
  #set up the rendering of the skin
  #++++++++++++++++++++++++
  render {
  #furthest back first
    pass "render_light_blue" {
      shader = "model.skeletal.veirdo.fire"
      material = "material-light-blue"
      meshes <mesh-light-blue>
      enabled = true
      depthFunc = Always
      variable uAlphaMultiplier       { value = 1.5 }
      variable uAlphaPower            { value = 1 }
      variable uDiffuseMultiplier     { value <1, 1, 1> }
      variable uFresnelTranspPow      { value = 2 }
      variable uMainOffset            { value <0.63, 0.63> }
      variable uMainScaleUV           { value <1.75, 1.75> }
      variable uMainSpeedUV           { value <0, 0> }
      variable uNoiseMultiplier       { value = 0.001 }
      variable uNoiseScaleUV          { value <1, 1> }
      variable uNoiseSpeedUV          { value <-2, -2> }
    }
    
    pass "render_light_cross" {
      shader = "model.skeletal.veirdo.fire"
      material = "material-light-cross"
      meshes <mesh-light-cross>
      enabled = true
      depthFunc = Always
      variable uAlphaMultiplier       { value = 2 }
      variable uAlphaPower            { value = 1.13 }
      variable uDiffuseMultiplier     { value <1, 1, 1> }
      variable uFresnelTranspPow      { value = 0.65 }
      variable uMainOffset            { value <0, 0> }
      variable uMainScaleUV           { value <1, 1> }
      variable uMainSpeedUV           { value <0, 0> }
      variable uNoiseMultiplier       { value = 0.003 }
      variable uNoiseScaleUV          { value <1, 1> }
      variable uNoiseSpeedUV          { value <2, 2> }
    }
    pass "render_death" {
      shader = "model.skeletal.veirdo.fire"
      material = "material-death"
      meshes <mesh-death>
      enabled = false
      depthWrite = false
      variable uAlphaMultiplier       { value = 2 }
      variable uAlphaPower            { value = 1.13 }
      variable uDiffuseMultiplier     { value <1, 1, 1> }
      variable uFresnelTranspPow      { value = 0.65 }
      variable uMainOffset            { value <0, 0> }
      variable uMainScaleUV           { value <1, 1> }
      variable uMainSpeedUV           { value <0, 0> }
      variable uNoiseMultiplier       { value = 0.004 }
      variable uNoiseScaleUV          { value <1, 1> }
      variable uNoiseSpeedUV          { value <2, 2> }
    }
  }

  #++++++++++++++++++++++++
  #setup the animations
  #++++++++++++++++++++++++
  animation {
   variable blight_cross_rotation{
      speed = 130
      #axis chaingun rotates around
      axis <0, -1, 0>
      angle = 1
      #bone that is affected by the rotation(child bones will also be affected of the chosen bone)
      node = "bone-light-cross"
    }
    variable dlight_blue_rotation{
      speed = 90
      #axis chaingun rotates around
      axis <0, -1, 0>
      angle = 1
      #bone that is affected by the rotation(child bones will also be affected of the chosen bone)
      node = "bone-light-blue"
    }
    variable death_rotation{
      speed = 0
      #axis chaingun rotates around
      axis <0, 1, 0>
      angle = 60
      #bone that is affected by the rotation(child bones will also be affected of the chosen bone)
      node = "bone-death"
    }
    
    #-----------------
    #setup different timeline changes
    #-----------------
    timeline "timeline_death" {
        script at 0 {
	          #speed degrees per second
		  blight_cross_rotation.speed.setValue (0)
		  dlight_blue_rotation.speed.setValue (0)
		  
		  render_light_blue.enabled = False
		  render_light_cross.enabled = False

		  render_death.enabled = True
		  render_death.uAlphaMultiplier.setValueFrom ( 0, 2, 0.3 )
		  death_rotation.angle.setValue (170)
	}
	script at 0.3 {
		#render_death.uAlpha.setValueFrom ( 1, 0, 0.4 )
		render_death.uAlphaMultiplier.setValueFrom ( 2, 0, 0.3 )
	}
    }
    #-----------------
    #setup the states(e.g. attacking, dying, walking)
    #-----------------
    #state SOUL {
    state RBALL1 {
      sequence arm|wait {
  	    prob = 1
      }
     }
     #state SOUL {
     state RBALLX1 {
       sequence arm|death {
         alwaysTrigger = true
         mustFinish = true
         prob = 1
         duration = 2
         timeline = timeline_death
        }
      }
  }
}
