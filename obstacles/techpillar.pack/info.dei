title: DHMP Techpillar
version: 20181025-1845
license: Attribution-NonCommercial-ShareAlike 4.0 International https://creativecommons.org/licenses/by-nc-sa/4.0/
tags: doom obstacle hidden


#exported at 0.17


########################
#Set up the model
########################
asset model.thing.misc48 {
  path = "techpillar.fbx"
  front <0, 0, 1>
  up <0, 1, 0>

  #++++++++++++++++++++++++
  #set up the textures for the model
  #++++++++++++++++++++++++
  material {
    variant "material_metal" { # use the normal textures
      mesh_body { #this says which mesh the material will be used with
        diffuseMap = "textures/techpillar_d.png"
        normalMap = "textures/techpillar_n.png"
        specularMap = "textures/techpillar_gs.png"
        emissiveMap = "textures/black_e.png"
      }
    }
    variant "material_tech" { # use the normal textures
      mesh_tech {
	diffuseMap = "textures/techpillar_d.png"
        normalMap = "textures/techpillar_n.png"
        specularMap = "textures/techpillar_gs.png"
        emissiveMap = "textures/black_e.png"
      }
    }
  }

  #++++++++++++++++++++++++
  #set up the rendering of the skin
  #++++++++++++++++++++++++
  render {
    pass "render_pass_metal" {
      shader = "model.skeletal.opaque.generic"
      material = "material_metal"
      meshes <mesh_body>
      variable uAlpha          { value = 1 }
      variable uAlphaLimit     { value = 0 }
      variable uColor          { value <1, 1, 1> }
      variable uEmission       { value = 0 }
      variable uGlossiness     { value = 40 }
      variable uReflection     { value = 0 }
      variable uReflectionBlur { value = 0 }
      variable uSpecular       { value = 0.4 }
    }
    pass "render_pass_tech" {
      material = "material_tech"
      meshes <mesh_tech>
      variable uAlpha          { value = 1 }
      variable uAlphaLimit     { value = 0 }
      variable uColor          { value <1, 1, 1> }
      variable uEmission       { value = 0 }
      variable uGlossiness     { value = 4 }
      variable uReflection     { value = 0.85 }
      variable uReflectionBlur { value = 12.5}
      variable uSpecular       { value = 1.7 }
    }
  }

  #++++++++++++++++++++++++
  #setup the animations
  #++++++++++++++++++++++++
  animation {
    #-----------------
    #setup the states(e.g. attacking, dying, walking)
    #-----------------
  	state TECHPILLAR {
      sequence arm_pillar|wait {
  		  prob = 1.0
  		  looping = True
  		}
	  }
  }
}
